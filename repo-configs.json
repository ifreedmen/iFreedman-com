{
  "repositories": [
    {
      "name": "ifreedman-com",
      "title": "iFreedmen Creative Suite",
      "description": "Flagship hub for the iFreedmen Creative Suite: sovereignty, culture, commerce, and communications. Links to .net/.info/.shop/.store. Pages-ready scaffold with shared brand tokens.",
      "copilot_prompt": "Create branch scaffold/initial. Add folders: .github/workflows, public, src, content, config, scripts. Add Pages workflow to build with Node 20 and publish dist (copy publicâ†’dist if no build). Add README.md with structure, local dev, build/export, and links to ifreedmen.net/info/shop/store. Commit and open PR \"feat: initial scaffold\" with checklist + labels scope:infra,type:scaffold.",
      "settings": {
        "owner": "ifreedmen",
        "visibility": "public",
        "add_readme": true,
        "gitignore_template": "Node",
        "license_template": "mit"
      }
    },
    {
      "name": "ifreedmen-net",
      "title": "Community Network",
      "description": "Community hub for engagement, collaboration, directories, and events. Digital town hall for Freedmen worldwide. Static deploy via GitHub Pages.",
      "copilot_prompt": "Create branch scaffold/initial. Static site scaffold with public,src,content/directory,content/events,config/nav.json. Seed 2 directory items + 1 event. Add Pages workflow (Node 20) publishing dist. Add README (purpose, data locations, how to add entries). Commit and open PR \"feat: initial scaffold\" with checklist + labels scope:infra,type:scaffold.",
      "settings": {
        "owner": "ifreedmen",
        "visibility": "public",
        "add_readme": true,
        "gitignore_template": "Node",
        "license_template": "mit"
      }
    },
    {
      "name": "ifreedmen-info",
      "title": "Research & Education",
      "description": "Research/education portal: lineage guides, treaties, legal references. Static search index. Future API stubs for identity verification.",
      "copilot_prompt": "Create branch scaffold/initial. Add public,src,content/treaties,content/lineage,content/legal,src/api (stubs),config/search-index.json. Add one sample article with front-matter. Pages workflow (Node 20) to dist. README explains content model + search index. Commit and open PR \"feat: initial scaffold\" with checklist + labels scope:infra,type:scaffold.",
      "settings": {
        "owner": "ifreedmen",
        "visibility": "public",
        "add_readme": true,
        "gitignore_template": "Node",
        "license_template": "mit"
      }
    },
    {
      "name": "ifreedmen-shop",
      "title": "Community Marketplace (Semi Nerd)",
      "description": "Open marketplace for Freedmen entrepreneurs and grassroots SaaS (Semi Nerd co-brand). Fee splits reinvested into the community. Next.js static export.",
      "copilot_prompt": "Create branch scaffold/initial. Init Next.js app; static export to dist. Add content/vendors,content/products with JSON schemas; config/commerce.json (platform 5, reinvest 3). Add simple listing page with ProductCard. Include Pages workflow (Node 20). README with scripts (dev,build export). Commit and open PR \"feat: initial scaffold\" with checklist + labels scope:infra,type:scaffold.",
      "settings": {
        "owner": "ifreedmen",
        "visibility": "public",
        "add_readme": true,
        "gitignore_template": "Node",
        "license_template": "mit"
      }
    },
    {
      "name": "ifreedmen-store",
      "title": "Internal Brand & Cultural Regalia",
      "description": "Official iFreedmen regalia store. Curated catalog, limited drops, cultural artifacts. Next.js static export for GitHub Pages.",
      "copilot_prompt": "Create branch scaffold/initial. Init Next.js; static export to dist. Add content/products (curated SKUs), config/drops.json (add one sample drop), and a simple DropTimer component. Include Pages workflow (Node 20). README with structure and release steps. Commit and open PR \"feat: initial scaffold\" with checklist + labels scope:infra,type:scaffold.",
      "settings": {
        "owner": "ifreedmen",
        "visibility": "public",
        "add_readme": true,
        "gitignore_template": "Node",
        "license_template": "mit"
      }
    }
  ]
}