{
  "repositories": [
    {
      "name": "ifreedmen-net",
      "title": "Community Network",
      "description": "Community hub for engagement, collaboration, directories, and events. Digital town hall for Freedmen worldwide. Static deploy via GitHub Pages.",
      "copilot_prompt": "Create branch scaffold/initial. Add .github/workflows/pages.yml (Node 20, build to dist/, deploy on push to main + PR preview). Add public/, src/, content/directory/, content/events/, config/nav.json, package.json with dev server. Seed 2 directory entries + 1 event. Add README with dev workflow. Commit PR feat: initial scaffold with labels scope:infra,type:scaffold.",
      "settings": {
        "owner": "ifreedmen",
        "visibility": "public",
        "add_readme": true,
        "gitignore_template": "Node",
        "license_template": "mit"
      }
    },
    {
      "name": "ifreedmen-info",
      "title": "Research & Education",
      "description": "Research/education portal: lineage guides, treaties, legal references. Static search index. Future API stubs for identity verification.",
      "copilot_prompt": "Create branch scaffold/initial. Add .github/workflows/pages.yml (Node 20, build to dist/, deploy main + preview PRs). Add public/, src/, content/treaties/, content/lineage/, content/legal/, src/api/, config/search-index.json, package.json with dev server and build scripts. Add 1 sample article with front-matter. Include README with content model, search index, and dev workflow. Commit PR feat: initial scaffold with labels scope:infra,type:scaffold.",
      "settings": {
        "owner": "ifreedmen",
        "visibility": "public",
        "add_readme": true,
        "gitignore_template": "Node",
        "license_template": "mit"
      }
    },
    {
      "name": "ifreedmen-shop",
      "title": "Community Marketplace (Semi Nerd)",
      "description": "Open marketplace for Freedmen entrepreneurs and grassroots SaaS (Semi Nerd co-brand). Fee splits reinvested into the community. Next.js static export.",
      "copilot_prompt": "Create branch scaffold/initial. Init Next.js with static export config. Add .github/workflows/pages.yml (Node 20, next build && next export to dist/, deploy main + preview PRs). Add content/vendors/, content/products/ with JSON schemas, config/commerce.json (5% platform, 3% reinvest). Create ProductCard component and listing page. Add package.json with dev server. Include README with dev workflow and scripts. Commit PR feat: initial scaffold with labels scope:infra,type:scaffold.",
      "settings": {
        "owner": "ifreedmen",
        "visibility": "public",
        "add_readme": true,
        "gitignore_template": "Node",
        "license_template": "mit"
      }
    },
    {
      "name": "ifreedmen-store",
      "title": "Internal Brand & Cultural Regalia",
      "description": "Official iFreedmen regalia store. Curated catalog, limited drops, cultural artifacts. Next.js static export for GitHub Pages.",
      "copilot_prompt": "Create branch scaffold/initial. Init Next.js with static export config. Add .github/workflows/pages.yml (Node 20, next build && next export to dist/, deploy main + preview PRs). Add content/products/ (curated SKUs), config/drops.json (1 sample drop), DropTimer component. Create product grid and detail pages. Add package.json with dev server. Include README with structure, release steps, and dev workflow. Commit PR feat: initial scaffold with labels scope:infra,type:scaffold.",
      "settings": {
        "owner": "ifreedmen",
        "visibility": "public",
        "add_readme": true,
        "gitignore_template": "Node",
        "license_template": "mit"
      }
    },
    {
      "name": "ifreedmen-api",
      "title": "API Gateway & Services",
      "description": "API gateway for iFreedmen services including health checks, identity verification, and shared backend services. RESTful API with comprehensive documentation.",
      "copilot_prompt": "Create branch scaffold/initial. Add .github/workflows/pages.yml (Node 20, build to dist/, deploy main + preview PRs). Add src/routes/, src/types/, src/middleware/, tests/, docs/api/, package.json with Express server and build scripts. Implement /health endpoint using shared HealthCheck type. Add comprehensive API documentation and test coverage. Include README with API reference, development workflow, and deployment guide. Commit PR feat: initial API scaffold with labels scope:infra,type:scaffold.",
      "settings": {
        "owner": "ifreedmen",
        "visibility": "public",
        "add_readme": true,
        "gitignore_template": "Node",
        "license_template": "mit"
      }
    }
  ]
}